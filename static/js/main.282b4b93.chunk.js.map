{"version":3,"sources":["components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","list","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","el","i","item","button","type","onClick","toUpperCase","slice","Section","title","children","section","Notification","message","text","App","state","feedbackIncrement","e","feedback","target","textContent","toLowerCase","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","totalFeedback","positiveFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,KAAO,6B,uCCAzBD,EAAOC,QAAU,CAAC,KAAO,2B,qJC2BVC,EAzBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACE,+BACE,qBAAIC,UAAWC,IAAEC,KAAjB,mBAA8BP,KAC9B,qBAAIK,UAAWC,IAAEC,KAAjB,sBAAiCN,KACjC,qBAAII,UAAWC,IAAEC,KAAjB,kBAA6BL,KAC7B,qBAAIG,UAAWC,IAAEC,KAAjB,oBAA+BJ,KAC/B,qBAAIE,UAAWC,IAAEC,KAAjB,+BAEGP,EAAO,EAAII,EAAqB,IAFnC,a,gBCmBOI,EA3BS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAGlC,OAFAD,EAAUE,OAAOC,KAAKH,GAGpB,mCACE,oBAAIJ,UAAWC,IAAEC,KAAjB,SACGE,EAAQI,KAAI,SAACC,EAAIC,GAAL,OACX,oBAAYV,UAAWC,IAAEU,KAAzB,SACE,wBACEX,UAAWC,IAAEW,OACbC,KAAK,SACLC,QAAST,EAHX,mBAKMI,EAAG,GAAGM,eALZ,OAK4BN,EAAGO,MAAM,OAN9BN,W,gBCOJO,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASnB,UAAWC,IAAEmB,QAAtB,UACE,oBAAIpB,UAAWC,IAAEiB,MAAjB,SAAyBA,IACxBC,M,iBCIQE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGtB,UAAWC,IAAEsB,KAAhB,SAAuBD,KCyDjBE,E,4MArDbC,MAAQ,CACN9B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP6B,kBAAoB,SAAAC,GAClB,IAAMC,EAAWD,EAAEE,OAAOC,YAAYC,cACtC,EAAKC,UAAS,SAAAC,GAAS,sBACpBL,EAAWK,EAAUL,GAAY,O,EAItCM,mBAAqB,SAACvC,EAAMC,EAASC,GAAhB,OAAwBF,EAAOC,EAAUC,G,EAE9DsC,gCAAkC,SAACxC,EAAMC,EAASC,GAAhB,OAChCuC,KAAKC,MAAc,IAAP1C,EAAc,EAAKuC,mBAAmBvC,EAAMC,EAASC,K,4CAEnE,WAAU,IAAD,EACwByC,KAAKb,MAA5B9B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjB0C,EAAgBD,KAAKJ,mBAAmBvC,EAAMC,EAASC,GACvD2C,EAAmBF,KAAKH,gCAC5BxC,EACAC,EACAC,GAGF,OACE,qCACE,cAAC,EAAD,CAASqB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEd,QAASkC,KAAKb,MACdpB,gBAAiBiC,KAAKZ,sBAG1B,cAAC,EAAD,CAASR,MAAM,aAAf,SACGqB,EAAgB,EACf,cAAC,EAAD,CACE5C,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyC,EACPxC,mBAAoByC,IAGtB,cAAC,EAAD,CAAclB,QAAQ,+B,GA9ChBmB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BtD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,OAAS,kC,kBCArGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.282b4b93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3x0L6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1BeAz\"};","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <ul>\n        <li className={s.list}>Good: {good}</li>\n        <li className={s.list}>Neutral: {neutral}</li>\n        <li className={s.list}>Bad: {bad}</li>\n        <li className={s.list}>Total: {total}</li>\n        <li className={s.list}>\n          Positive feedback:\n          {good > 0 ? positivePercentage : '0'}%\n        </li>\n      </ul>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  options = Object.keys(options);\n\n  return (\n    <>\n      <ul className={s.list}>\n        {options.map((el, i) => (\n          <li key={i} className={s.item}>\n            <button\n              className={s.button}\n              type=\"button\"\n              onClick={onLeaveFeedback}\n            >\n              {`${el[0].toUpperCase()}${el.slice(1)}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={s.text}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\n\nimport Statistics from 'components/Statistics';\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Section from 'components/Section';\nimport Notification from 'components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackIncrement = e => {\n    const feedback = e.target.textContent.toLowerCase();\n    this.setState(prevState => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n\n  countTotalFeedback = (good, neutral, bad) => good + neutral + bad;\n\n  countPositiveFeedbackPercentage = (good, neutral, bad) =>\n    Math.round((good * 100) / this.countTotalFeedback(good, neutral, bad));\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback(good, neutral, bad);\n    const positiveFeedback = this.countPositiveFeedbackPercentage(\n      good,\n      neutral,\n      bad,\n    );\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.feedbackIncrement}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {totalFeedback > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercentage={positiveFeedback}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__wD__l\",\"item\":\"FeedbackOptions_item__su48G\",\"button\":\"FeedbackOptions_button__2AZ2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__tcJ_q\",\"title\":\"Section_title__2hcfq\"};"],"sourceRoot":""}